openapi: "3.1.0"
info:
  title: "DP API"
  description: "DP API"
  version: "1.0.0"
servers:
- url: "https://DP"
paths:
  /dayRecords:
    get:
      description: ""
      parameters:
      - name: "date"
        in: "query"
        required: true
        schema:
          type: "object"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Missing required parameter: date"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Pair"
  /elementsCodelist:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/ElementCodelist"
  /measurements/{stationId}/actual:
    get:
      description: ""
      parameters:
      - name: "stationId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Missing required parameter: stationId"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/MeasurementLatest"
  /measurements/{stationId}/daily:
    get:
      description: ""
      parameters:
      - name: "stationId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "dateFrom"
        in: "query"
        required: true
        schema:
          type: "string"
      - name: "dateTo"
        in: "query"
        required: true
        schema:
          type: "string"
      - name: "element"
        in: "query"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Missing required query parameters: dateFrom, dateTo, and\
                    \ element"
                Example#2:
                  value: "Missing required parameter: stationId"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/MeasurementDaily"
  /measurements/{stationId}/measurementsMonth:
    get:
      description: ""
      parameters:
      - name: "stationId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "date"
        in: "query"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Missing required parameter: stationId"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/MeasurementMonthly"
  /measurements/{stationId}/mesurementsDayAndMonth:
    get:
      description: ""
      parameters:
      - name: "stationId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "date"
        in: "query"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Missing required parameter: stationId"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/MeasurementDaily"
  /measurements/{stationId}/monthly:
    get:
      description: ""
      parameters:
      - name: "stationId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "dateFrom"
        in: "query"
        required: true
        schema:
          type: "string"
      - name: "dateTo"
        in: "query"
        required: true
        schema:
          type: "string"
      - name: "element"
        in: "query"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Missing required query parameters: dateFrom, dateTo, and\
                    \ element"
                Example#2:
                  value: "Missing required parameter: stationId"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Unit"
  /measurements/{stationId}/recent:
    get:
      description: ""
      parameters:
      - name: "stationId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Missing required parameter: stationId"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Unit"
  /measurements/{stationId}/statsDay:
    get:
      description: ""
      parameters:
      - name: "stationId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "date"
        in: "query"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Missing required parameter: stationId"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/MeasurementDaily"
  /measurements/{stationId}/statsDayLongTerm:
    get:
      description: ""
      parameters:
      - name: "stationId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "date"
        in: "query"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Missing required parameter: stationId"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/ValueStats"
  /measurements/{stationId}/statsMonthLongTerm:
    get:
      description: ""
      parameters:
      - name: "stationId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "date"
        in: "query"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Missing required parameter: stationId"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/ValueStats"
  /measurements/{stationId}/yearly:
    get:
      description: ""
      parameters:
      - name: "stationId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "dateFrom"
        in: "query"
        required: true
        schema:
          type: "string"
      - name: "dateTo"
        in: "query"
        required: true
        schema:
          type: "string"
      - name: "element"
        in: "query"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Missing required query parameters: dateFrom, dateTo, and\
                    \ element"
                Example#2:
                  value: "Missing required parameter: stationId"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Unit"
  /recordsAllTime:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/RecordStats"
  /stationAllTimeRecords/{stationId}:
    get:
      description: ""
      parameters:
      - name: "stationId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Missing required parameter: stationId"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/RecordStats"
  /stationDayRecords/{stationId}:
    get:
      description: ""
      parameters:
      - name: "stationId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "date"
        in: "query"
        required: true
        schema:
          type: "object"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Missing required parameters: stationId and/or date"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Pair"
  /stations:
    get:
      description: ""
      parameters:
      - name: "active"
        in: "query"
        required: false
        schema:
          type: "boolean"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Station"
  /stations/{id}:
    get:
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Missing required parameter: id"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Station"
  /stations/closest:
    get:
      description: ""
      parameters:
      - name: "lat"
        in: "query"
        required: true
        schema:
          type: "number"
      - name: "long"
        in: "query"
        required: true
        schema:
          type: "number"
      - name: "count"
        in: "query"
        required: false
        schema:
          type: "integer"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Count must be greater than 0"
                Example#2:
                  value: "Invalid latitude or longitude"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Station"
  /json/kotlinx-serialization:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Map_String"
components:
  schemas:
    Pair:
      type: "object"
      properties: {}
    ElementCodelist:
      type: "object"
      properties:
        abbreviation:
          type: "string"
        name:
          type: "string"
        unit:
          type: "string"
      required:
      - "abbreviation"
      - "name"
      - "unit"
    LocalDateTime:
      type: "object"
      properties: {}
    Instant:
      type: "object"
      properties: {}
    MeasurementLatest:
      type: "object"
      properties:
        stationId:
          type: "string"
        element:
          type: "string"
        timestamp:
          $ref: "#/components/schemas/LocalDateTime"
        value:
          type: "number"
          format: "double"
        flag:
          type: "string"
        quality:
          type: "number"
          format: "double"
        createdAt:
          $ref: "#/components/schemas/Instant"
      required:
      - "stationId"
      - "element"
      - "timestamp"
      - "createdAt"
    LocalDate:
      type: "object"
      properties: {}
    MeasurementDaily:
      type: "object"
      properties:
        stationId:
          type: "string"
        element:
          type: "string"
        vtype:
          type: "string"
        date:
          $ref: "#/components/schemas/LocalDate"
        value:
          type: "number"
          format: "double"
        flag:
          type: "string"
        quality:
          type: "number"
          format: "double"
        schedule:
          type: "string"
      required:
      - "stationId"
      - "element"
      - "vtype"
      - "date"
    MeasurementMonthly:
      type: "object"
      properties:
        stationId:
          type: "string"
        element:
          type: "string"
        year:
          type: "integer"
          format: "int32"
        month:
          type: "integer"
          format: "int32"
        timeFunction:
          type: "string"
        mdFunction:
          type: "string"
        value:
          type: "number"
          format: "double"
        flagRepeat:
          type: "string"
        flagInterrupted:
          type: "string"
      required:
      - "stationId"
      - "element"
      - "timeFunction"
      - "mdFunction"
    Unit:
      type: "object"
      properties: {}
    ValueStats:
      type: "object"
      properties:
        element:
          type: "string"
        highest:
          type: "number"
          format: "double"
        lowest:
          type: "number"
          format: "double"
        average:
          type: "number"
          format: "double"
      required:
      - "element"
    StationRecord:
      type: "object"
      properties:
        stationId:
          type: "string"
        element:
          type: "string"
        recordType:
          type: "string"
        value:
          type: "number"
          format: "double"
        recordDate:
          $ref: "#/components/schemas/LocalDate"
      required:
      - "stationId"
      - "element"
      - "recordType"
      - "recordDate"
    RecordStats:
      type: "object"
      properties:
        highest:
          $ref: "#/components/schemas/StationRecord"
        lowest:
          $ref: "#/components/schemas/StationRecord"
        average:
          type: "number"
          format: "double"
    StationElement:
      type: "object"
      properties:
        stationId:
          type: "string"
        beginDate:
          $ref: "#/components/schemas/LocalDateTime"
        endDate:
          $ref: "#/components/schemas/LocalDateTime"
        elementAbbreviation:
          type: "string"
        elementName:
          type: "string"
        unitDescription:
          type: "string"
        height:
          type: "number"
          format: "double"
        schedule:
          type: "string"
      required:
      - "stationId"
      - "endDate"
      - "elementAbbreviation"
      - "elementName"
      - "unitDescription"
      - "schedule"
    Station:
      type: "object"
      properties:
        stationId:
          type: "string"
        code:
          type: "string"
        startDate:
          $ref: "#/components/schemas/LocalDateTime"
        endDate:
          $ref: "#/components/schemas/LocalDateTime"
        location:
          type: "string"
        longitude:
          type: "number"
          format: "double"
        latitude:
          type: "number"
          format: "double"
        elevation:
          type: "number"
          format: "double"
        stationElements:
          type: "array"
          items:
            $ref: "#/components/schemas/StationElement"
        stationLatestMeasurements:
          type: "array"
          items:
            $ref: "#/components/schemas/MeasurementLatest"
      required:
      - "stationId"
      - "code"
      - "startDate"
      - "endDate"
      - "location"
      - "stationElements"
      - "stationLatestMeasurements"
    Map:
      type: "object"
      properties: {}
    Map_String:
      type: "string"